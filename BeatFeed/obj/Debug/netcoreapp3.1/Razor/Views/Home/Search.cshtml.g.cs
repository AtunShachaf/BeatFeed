#pragma checksum "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7589426f01a85c8f0f1a97e389bca9574dcde3b9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Search), @"mvc.1.0.view", @"/Views/Home/Search.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\_ViewImports.cshtml"
using BeatFeed;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\_ViewImports.cshtml"
using BeatFeed.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7589426f01a85c8f0f1a97e389bca9574dcde3b9", @"/Views/Home/Search.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"051ada23fc91e6cf2a913b8d6d1ad5d57230128e", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Search : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<BeatFeed.Models.Song>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
   ViewData["Title"] = "Search";
    Layout = "~/Views/Shared/_LoggedInLayout.cshtml"; 

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<!-- Playlist section -->

<section class=""playlist-section spad"">
    <div class=""container-fluid"" onload=""mainWindow"">
        <div class=""section-title"">
            <h2>Search results</h2>
        </div>
        <ul class=""playlist-filter controls"">
            <li class=""control"" data-filter="".Genres"">Songs</li>
            <li class=""control"" data-filter="".artists"">Artists</li>
            <li class=""control"" data-filter="".movies"">Albums</li>
            <li id=""clickme"" class=""control"" data-filter="".all"">All Playlist</li>
        </ul>
        <div class=""container"">
            <div class=""mix Genres"">
                <ul class=""playlist-filter"">
                    <!-- songs that CounterPlayed > 10  -->
                    <li>  <input type=""checkbox"" id=""PopularS"" name=""PopularS"" value=""PopularS"" onclick=""changeSong(1)""> Popular</li>
                    <!-- Album that Release_Date  this year -->
                    <li><input type=""checkbox"" id=""New"" name=""New"" value=""New"" onc");
            WriteLiteral(@"lick=""changeSong(3)""> New</li>
                    <!-- Rock band -->
                    <li><input type=""checkbox"" id=""RockS"" name=""RockS"" value=""RockS"" onclick=""changeSong(2)""> Rock</li>
                </ul>
            </div>

            <div class=""mix artists"">
                <ul class=""playlist-filter"">
                    <!-- has songs that CounterPlayed > 10  -->
                    <li><input type=""checkbox"" id=""Popular"" name=""Popular"" value=""Popular"" onclick=""changeArtist(1)""> Popular</li>
                    <!-- rock band -->
                    <li><input type=""checkbox"" id=""Rock"" name=""Rock"" value=""Rock"" onclick=""changeArtist(2)""> Rock</li>
                    <!-- Release_Date this year -->
                    <li><input type=""checkbox"" id=""Active"" name=""Active"" value=""Active"" onclick=""changeArtist(3)""> Active</li>
                </ul>
            </div>

        </div>



        <div class=""clearfix""></div>
        <div class=""row playlist-area"">

");
#nullable restore
#line 49 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
               List<int> artists = new List<int>();
                List<int> albums = new List<int>();
        
                foreach (var item in Model)
                {
                   

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <div class=\"mix col-lg-3 col-md-4 col-sm-6 Genres\">\r\n                 \r\n                                        <div class=\"playlist-item\">\r\n                                            <img");
            BeginWriteAttribute("src", " src=", 2582, "", 2638, 1);
#nullable restore
#line 58 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
WriteAttributeValue("", 2587, Html.DisplayFor(modelItem => item.Album.ImageLink), 2587, 51, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            BeginWriteAttribute("alt", " alt=\"", 2638, "\"", 2644, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                            <a");
            BeginWriteAttribute("href", " href=\"", 2694, "\"", 2768, 2);
            WriteAttributeValue("", 2701, "/Artists/Artist/", 2701, 16, true);
#nullable restore
#line 59 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
WriteAttributeValue("", 2717, Html.DisplayFor(modelItem => item.Album.Artist.Id), 2717, 51, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">\r\n                                                <h5>");
#nullable restore
#line 60 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
                                               Write(Html.DisplayFor(modelItem => item.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral("</h5>\r\n                                            </a>\r\n");
#nullable restore
#line 62 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
                                             if (item.CounterPlayed > 10)
                                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <h5 class=\"popular\" id=\"popular\" style=\"display:none\"></h5>\r\n");
#nullable restore
#line 65 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
                                        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 66 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
                                             if (item.Album.Genre.ToLower() == "rock")
                                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            <h5 class=\"rock\" id=\"rock\" style=\"display:none\"></h5>\r\n");
#nullable restore
#line 69 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
                                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 71 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
                                             if (item.Album.Release_Date.Year == DateTime.UtcNow.Year)
                                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                <h5 class=\"new\" id=\"new\" style=\"display:none\"></h5>\r\n");
#nullable restore
#line 74 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
                                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                        </div>\r\n                           \r\n                \r\n\r\n                        </div> \r\n");
#nullable restore
#line 81 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
                        bool isInArtistList = artists.IndexOf(item.Album.Artist.Id) != -1;

                                if (!isInArtistList)
                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <div class=\"mix col-lg-3 col-md-4 col-sm-6 artists\">\r\n                    <div class=\"playlist-item\">\r\n                        <img");
            BeginWriteAttribute("src", " src=", 4231, "", 4294, 1);
#nullable restore
#line 87 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
WriteAttributeValue("", 4236, Html.DisplayFor(modelItem => item.Album.Artist.ImageLink), 4236, 58, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            BeginWriteAttribute("alt", " alt=\"", 4294, "\"", 4300, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                        <a");
            BeginWriteAttribute("href", " href=\"", 4330, "\"", 4404, 2);
            WriteAttributeValue("", 4337, "/Artists/Artist/", 4337, 16, true);
#nullable restore
#line 88 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
WriteAttributeValue("", 4353, Html.DisplayFor(modelItem => item.Album.Artist.Id), 4353, 51, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">\r\n                            <h5>");
#nullable restore
#line 89 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
                           Write(Html.DisplayFor(modelItem => item.Album.Artist.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral("</h5>\r\n                        </a>\r\n");
#nullable restore
#line 91 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
                         if (item.CounterPlayed > 10)
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                    <h5 class=\"popular\" id=\"popular\" style=\"display:none\"></h5>");
#nullable restore
#line 93 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
                                                                               }

#line default
#line hidden
#nullable disable
#nullable restore
#line 94 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
                         if (item.Album.Genre.ToLower() == "rock")
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                    <h5 class=\"rock\" id=\"rock\" style=\"display:none\"></h5>");
#nullable restore
#line 96 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
                                                                         }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 98 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
                         if (item.Album.Release_Date.Year == DateTime.UtcNow.Year)
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                    <h5 class=\"active\" id=\"active\" style=\"display:none\"></h5>");
#nullable restore
#line 100 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
                                                                             }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </div>\r\n                </div> ");
#nullable restore
#line 103 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
                       artists.Add(item.Album.Artist.Id);
                                }

                                bool isInAlbumList = albums.IndexOf(item.Album.Id) != -1;

                                if (!isInAlbumList)
                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <div class=\"mix col-lg-3 col-md-4 col-sm-6 movies\">\r\n                    <div class=\"playlist-item\">\r\n                        <img");
            BeginWriteAttribute("src", " src=", 5511, "", 5567, 1);
#nullable restore
#line 112 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
WriteAttributeValue("", 5516, Html.DisplayFor(modelItem => item.Album.ImageLink), 5516, 51, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            BeginWriteAttribute("alt", " alt=\"", 5567, "\"", 5573, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                        <a");
            BeginWriteAttribute("href", " href=\"", 5603, "\"", 5677, 2);
            WriteAttributeValue("", 5610, "/Artists/Artist/", 5610, 16, true);
#nullable restore
#line 113 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
WriteAttributeValue("", 5626, Html.DisplayFor(modelItem => item.Album.Artist.Id), 5626, 51, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">\r\n                            <h5>");
#nullable restore
#line 114 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
                           Write(Html.DisplayFor(modelItem => item.Album.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral("</h5>\r\n                        </a>\r\n                    </div>\r\n                </div> ");
#nullable restore
#line 117 "C:\Users\רותם\source\repos\test\BeatFeed\BeatFeed\Views\Home\Search.cshtml"
                       }
                       
                                
                                 } 

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        </div>
    </div>
</section>
<script>
    window.addEventListener(""load"", function () {
        document.getElementById(""clickme"").click();
    });

    function changeArtist(s) {
        let victim = 0;
        let reason = ""active"";
        switch (s.toString(10)) {
            case ""1"":
                victim = document.getElementById(""Popular"");
                reason = ""popular"";
                break;

            case ""2"":
                victim = document.getElementById(""Rock"");
                reason = ""rock"";
                break;

            default:
                victim = document.getElementById(""Active"");
        }
        let all_ele = document.getElementsByClassName(""playlist-item"");

        if (victim.checked) {
            for (let i = 0; i <= all_ele.length; i++) {
                if (all_ele[i] == undefined) { continue; }

                // all are none
                let flag = false;
                for (let j = 0; j <= all_ele[i].childNodes");
            WriteLiteral(@".length; j++) {
                    if (all_ele[i].childNodes[j] == undefined) { continue; }

                    if (all_ele[i].childNodes[j].className == reason) {
                        flag = true;
                    }

                }
                if (flag == false) {
                    all_ele[i].style = ""display:none"";
                    all_ele[i][reason] = true;
                }


            }
        }

        else {
            for (let i = 0; i <= all_ele.length; i++) {
                if (all_ele[i] == undefined) { continue; }

                if (all_ele[i][reason] != undefined) {
                    all_ele[i][reason] = undefined;

                    if (all_ele[i][""rock""] == undefined && all_ele[i][""popular""] == undefined && all_ele[i][""active""] == undefined) {
                        all_ele[i].style = """";
                    }
                }


            }
        }

    }
    function changeSong(s) {
        let victim = 0;
        let re");
            WriteLiteral(@"ason = ""new"";
        switch (s.toString(10)) {
            case ""1"":
                victim = document.getElementById(""PopularS"");
                reason = ""popular"";
                break;
                
            case ""2"":
                victim = document.getElementById(""RockS"");
                reason = ""rock"";
                break;

            default:
                victim = document.getElementById(""New"");
        }
        let all_ele = document.getElementsByClassName(""playlist-item"");

        if (victim.checked) {
            for (let i = 0; i <= all_ele.length; i++) {
                if (all_ele[i] == undefined) { continue; }

                // all are none
                let flag = false;
                for (let j = 0; j <= all_ele[i].childNodes.length; j++) {
                    if (all_ele[i].childNodes[j] == undefined) { continue; }

                    if (all_ele[i].childNodes[j].className == reason) {
                        flag = true;
                ");
            WriteLiteral(@"    }

                }
                if (flag == false) {
                    all_ele[i].style = ""display:none"";
                    all_ele[i][reason] = true;
                }
                
                
            }
        }

        else {
            for (let i = 0; i <= all_ele.length; i++) {
                if (all_ele[i] == undefined) { continue; }

                if (all_ele[i][reason] != undefined) {
                    all_ele[i][reason] = undefined;
                   
                    if (all_ele[i][""rock""] == undefined && all_ele[i][""popular""] == undefined && all_ele[i][""new""] == undefined) {
                        all_ele[i].style = """";
                    }
                }


            }
        }

    }
    function refresh_ele() {
        let all_ele = document.getElementsByClassName(""playlist-item"");
        let frag = document.createDocumentFragment();
        let non, sorted = [];

        for (let i = 0; i <= all_ele.length; i++) {
 ");
            WriteLiteral(@"           if (all_ele[i] == undefined) { continue; }

            if (all_ele[i].style == ""display:none"") {
                non.push(all_ele[i]);
            }
            else {
                sorted.push(all_ele[i]);
            }
        }

        //$('#clickme').insertAfter( "".container"" );
        for (let item of sorted) {
            frag.appendChild(item);
        }
        all_ele.appendChild(frag);

       
    }
</script>
<!-- Playlist section end -->
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<BeatFeed.Models.Song>> Html { get; private set; }
    }
}
#pragma warning restore 1591
